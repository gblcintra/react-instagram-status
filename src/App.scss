.container {
  // width: 100%;
  height: 100vh;
  background-color: black;
  align-content: center;
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;

  .justify-content-center {
    display: flex;
    position: absolute;
    justify-content: center !important;
    left: calc(50% - 6.35em);
    top: calc(50% - 6.6em);
    z-index: 15;

    .image_outer_container {
      margin-top: auto;
      margin-bottom: auto;
      border-radius: 50%;
      position: relative;

      .green_icon {
        background-color: #4cd137;
        position: absolute;
        right: 30px;
        bottom: 10px;
        height: 30px;
        width: 30px;
        border: 5px solid white;
        border-radius: 50%;
      }

      .image_inner_container {
        // border-radius: 50%;
        padding: 5px;
        // background: #833ab4;
        // background: -webkit-linear-gradient(to bottom, #fcb045, #fd1d1d, #833ab4);
        // background: linear-gradient(to bottom, #fcb045, #fd1d1d, #833ab4);

        img {
          width: 14em;
          height: 14em;
          border-radius: 50%;
          border: 5px solid white;
        }
      }
    }
  }

  @mixin circle($size) {
    content: "";
    position: absolute;
    border-radius: 50%;
    left: calc(50% - #{$size/2});
    top: calc(50% - #{$size/2});
    width: $size;
    height: $size;
  }

  $wheel: 15em;
  .wheel,
  .umbrella,
  .color {
    @include circle($wheel);
  }

  .wheel {
    .umbrella {
      position: relative;
      .color {
        clip: rect(0, $wheel, $wheel, #{$wheel/2});
        &:nth-child(n + 7):after {
          clip: rect(0, $wheel, $wheel, #{$wheel/2});
        }
        &:after,
        &:nth-child(n + 7) {
          @include circle($wheel);
          clip: rect(0, #{$wheel/2}, $wheel, 0);
        }
      }
    }
  }

  $colors: (#d3ff00, #000, #d3ff00, #000, #d3ff00, #000, #d3ff00, #000, #d3ff00, #000, #d3ff00, #000);

  @for $i from 0 to length($colors) {
    .color:nth-child(#{1 + $i}):after {
      background-color: nth($colors, $i + 1);
      @if $i < 6 {
        transform: rotate(#{30 * (1 + $i)}deg);
        z-index: #{length($colors)-$i};
      } @else {
        transform: rotate(#{-30+ (30 * (1 + $i))}deg);
      }
    }
  }
}
